(()=>{"use strict";function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var e=function(){function e(t,n,r,o){var i=o.handleCardClick,a=o.handleDelIconClick,u=o.handleLikeClick;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=t,this._name=t.name,this._link=t.link,this._templateSelector=r,this._handleCardClick=i,this._handleDelIconClick=a,this._handleLikeClick=u,this._myId=n,this._ownerId=t.owner._id,this.cardId=t._id}var n,r;return n=e,(r=[{key:"_getTemplate",value:function(){return this._template.content.querySelector(".item").cloneNode(!0)}},{key:"_removeButtonTrash",value:function(){this._delButton.style.display="none"}},{key:"generateCard",value:function(){return this._template=document.querySelector(this._templateSelector),this._item=this._getTemplate(),this._delButton=this._item.querySelector(".item__delete"),this._likeButton=this._item.querySelector(".item__like"),this._ownerId!==this._myId&&this._removeButtonTrash(),this.checkStatusLike()&&this._changeColorLike(),this._cardImage=this._item.querySelector(".item__picture"),this._likesCount=this._item.querySelector(".item__like-count"),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setLikeCount(this._data.likes),this._item.querySelector(".item__title").textContent=this._name,this._item}},{key:"_setEventListeners",value:function(){var t=this;this._item.contains(this._delButton)&&this._delButton.addEventListener("click",(function(){return t._handleDelIconClick({id:t.cardId,removeItem:function(){return t._removeItem()}})})),this._likeButton.addEventListener("click",(function(){return t._handleLikeClick(t._data)})),this._cardImage.addEventListener("click",this._handleCardClick)}},{key:"_removeItem",value:function(){this._item.remove(),this._item=null}},{key:"checkStatusLike",value:function(){var t=this;return this._data.likes.some((function(e){return e._id===t._myId}))}},{key:"_changeColorLike",value:function(){this._likeButton.classList.toggle("item__like_active")}},{key:"_setLikeCount",value:function(){this._likesCount.textContent=this._data.likes.length}},{key:"updateData",value:function(t){this._data.likes=t.likes}},{key:"toggleLike",value:function(){this._changeColorLike(),this._setLikeCount()}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function n(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var r=function(){function t(e,n){var r,o,i=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),o=function(){return i._inputList.some((function(t){return!t.validity.valid}))},(r="_hasInvalidInput")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._config=e,this._formForValid=n,this._buttonSubmit=n.querySelector(e.buttonSubmit),this._inputList=Array.from(n.querySelectorAll(e.inputClass))}var e,r;return e=t,(r=[{key:"enableValidation",value:function(){this._setEventListener()}},{key:"_setEventListener",value:function(){var t=this;this._formForValid.addEventListener("input",(function(e){return t._handleInputForm(e)})),this._formForValid.addEventListener("submit",(function(t){t.preventDefault()}))}},{key:"_handleInputForm",value:function(t){var e=t.target;this._toggleButtonState(),this._checkInputValidity(e)}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInpuError(t):this._showInputErorr(t)}},{key:"_setActiveButtonState",value:function(){this._buttonSubmit.classList.remove(this._config.buttonSubmitInactiveClass),this._buttonSubmit.removeAttribute("disabled")}},{key:"_setInactiveButtonState",value:function(){this._buttonSubmit.classList.add(this._config.buttonSubmitInactiveClass),this._buttonSubmit.setAttribute("disabled","true")}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._setInactiveButtonState():this._setActiveButtonState()}},{key:"_showInputErorr",value:function(t){var e=this._formForValid.querySelector("#".concat(t.id,"-error"));t.classList.add(this._config.inputErrorClass),e.textContent=t.validationMessage}},{key:"_hideInpuError",value:function(t){var e=this._formForValid.querySelector("#".concat(t.id,"-error"));t.classList.remove(this._config.inputErrorClass),e.textContent=""}},{key:"validBeforeOpenForm",value:function(){var t=this;this._inputList.forEach((function(e){t._hideInpuError(e)})),this._toggleButtonState()}}])&&n(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var i=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"renderItems",value:function(t){t.forEach(this._renderer)}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var u=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupElement=document.querySelector(e),this._handleOutsideClickClose=this._handleOutsideClickClose.bind(this),this._handleEscClose=this._handleEscClose.bind(this)}var e,n;return e=t,(n=[{key:"open",value:function(){this.setEventListeners(),this._popupElement.classList.add("popup_opened")}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),this.delEventListeners()}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"_handleOutsideClickClose",value:function(t){(t.target===this._popupElement||t.target.classList.contains("popup__button-close"))&&this.close()}},{key:"setEventListeners",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popupElement.addEventListener("click",this._handleOutsideClickClose)}},{key:"delEventListeners",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popupElement.removeEventListener("click",this._handleOutsideClickClose)}}])&&a(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function s(){return s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=f(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},s.apply(this,arguments)}function f(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=d(t)););return t}function p(t,e){return p=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},p(t,e)}function h(t,e){if(e&&("object"===c(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function d(t){return d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},d(t)}var y=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&p(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=d(r);if(o){var n=d(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return h(this,t)});function a(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,t)}return e=a,(n=[{key:"open",value:function(t){var e=this._popupElement.querySelector(".popup__image"),n=this._popupElement.querySelector(".popup__heading-image");e.src=t.link,e.alt=t.name,n.textContent=t.name,s(d(a.prototype),"open",this).call(this)}}])&&l(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(u);function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=v(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},m.apply(this,arguments)}function v(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=S(t)););return t}function k(t,e){return k=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},k(t,e)}function g(t,e){if(e&&("object"===_(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function S(t){return S=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},S(t)}var w=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&k(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=S(r);if(o){var n=S(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return g(this,t)});function a(t,e){var n,r=e.callbackSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._callbackSubmit=r,n._form=n._popupElement.querySelector(".form-group"),n._buttonSubmit=n._form.querySelector(".form-group__button-save"),n}return e=a,(n=[{key:"_getInputValues",value:function(){return this._inputList=Array.from(this._popupElement.querySelectorAll(".form-group__item")),this._inputListValues=this._inputList.reduce((function(t,e){return t[e.name]=e.value,t}),{}),this._inputListValues}},{key:"setEventListeners",value:function(){var t=this;this._listener=function(){t._callbackSubmit({data:t._getInputValues(),button:t._buttonSubmit})},this._form.addEventListener("submit",this._listener),m(S(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){m(S(a.prototype),"close",this).call(this),this._form.reset()}},{key:"delEventListeners",value:function(){this._form.removeEventListener("submit",this._listener),m(S(a.prototype),"delEventListeners",this).call(this)}}])&&b(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(u);function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function C(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=L(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},O.apply(this,arguments)}function L(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=P(t)););return t}function I(t,e){return I=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},I(t,e)}function j(t,e){if(e&&("object"===E(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function P(t){return P=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},P(t)}var R=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&I(t,e)}(a,t);var e,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=P(r);if(o){var n=P(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return j(this,t)});function a(t,e){var n,r=e.callbackSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._callbackSubmit=r,n._form=n._popupElement.querySelector(".form-group"),n._buttonSubmit=n._form.querySelector(".form-group__button-save"),n}return e=a,(n=[{key:"open",value:function(t){this._data=t,O(P(a.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var t=this;this._listener=function(e){e.preventDefault(),t._callbackSubmit({data:t._data,button:t._buttonSubmit})},this._form.addEventListener("submit",this._listener),O(P(a.prototype),"setEventListeners",this).call(this)}},{key:"delEventListeners",value:function(){this._form.removeEventListener("submit",this._listener),O(P(a.prototype),"delEventListeners",this).call(this)}}])&&C(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),a}(u);function q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var T=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameProfile=document.querySelector(e.profileName),this._aboutProfile=document.querySelector(e.profileAbout),this._profileAvatar=document.querySelector(e.profileAvatar)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return{name:this._nameProfile.textContent,about:this._aboutProfile.textContent,avatar:this._profileAvatar}}},{key:"setUserInfo",value:function(t){this._nameProfile.textContent=t.name,this._aboutProfile.textContent=t.about,this._profileAvatar.style.backgroundImage="url(".concat(t.avatar,")")}}])&&q(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function A(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var B=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._headers=e.headers}var e,n;return e=t,(n=[{key:"_handleResponse",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then(this._handleResponse)}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then(this._handleResponse)}},{key:"getAllData",value:function(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}},{key:"changeUserInfo",value:function(t){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(t)}).then(this._handleResponse)}},{key:"addCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(t)}).then(this._handleResponse)}},{key:"delCard",value:function(t){return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"toggleLike",value:function(t,e){return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:e?"DELETE":"PUT",headers:this._headers}).then(this._handleResponse)}},{key:"changeAvatar",value:function(t){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify(t)}).then(this._handleResponse)}}])&&A(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),x=document.querySelector(".popup_button_reduct"),U=document.querySelector(".info__button-reduct"),D=x.querySelector(".form-group"),V=D.querySelector(".form-group__item_el_name"),F=D.querySelector(".form-group__item_el_job"),N=document.querySelector(".profile__add-button"),J=document.querySelector(".popup_button_add-item").querySelector(".form-group"),G=document.querySelector(".popup_button_change-avatar"),H=document.querySelector(".profile__avatar"),M=G.querySelector(".form-group"),z={buttonSubmit:".form-group__button-save",inputClass:".form-group__item",inputErrorClass:"form-group__item_error",buttonSubmitInactiveClass:"form-group__button-save_inactive"};function $(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var K=new B({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"5f54aa7b-f781-4bbd-a84a-c9d65d5c54ef","Content-Type":"application/json"}}),Q=new r(z,D),W=new r(z,J),X=new r(z,M),Y=new y(".popup_content_image"),Z=new T({profileName:".info__name",profileAbout:".info__about",profileAvatar:".profile__avatar"}),tt=new w(".popup_button_reduct",{callbackSubmit:function(t){t.button.textContent="Сохранение...",K.changeUserInfo(t.data).then((function(t){Z.setUserInfo(t),tt.close()})).finally((function(){return t.button.textContent="Сохранить"})).catch((function(t){return console.log(t)}))}}),et="",nt=function(t){var n=new e(t,et,".template-item",{handleCardClick:function(){Y.open(t)},handleDelIconClick:function(t){it.open(t)},handleLikeClick:function(t){K.toggleLike(t._id,n.checkStatusLike()).then((function(t){n.updateData(t),n.toggleLike()})).catch((function(t){return console.log(t)}))}});return n.generateCard()},rt=new i({renderer:function(t){rt.addItem(nt(t))}},".cards");K.getAllData().then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(t){u=!0,o=t}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(e,n)||function(t,e){if(t){if("string"==typeof t)return $(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];et=i._id,Z.setUserInfo(i),rt.renderItems(o)})).catch((function(t){return console.log(t)})),U.addEventListener("click",(function(){Q.validBeforeOpenForm();var t=Z.getUserInfo(),e=t.name,n=t.about;V.value=e,F.value=n,tt.open()}));var ot=new w(".popup_button_change-avatar",{callbackSubmit:function(t){t.button.textContent="Сохранение...",K.changeAvatar(t.data).then((function(t){Z.setUserInfo(t),ot.close()})).finally((function(){return t.button.textContent="Сохранение"})).catch((function(t){return console.log(t)}))}});H.addEventListener("click",(function(){X.validBeforeOpenForm(),ot.open()}));var it=new R(".popup_button_confirm-del",{callbackSubmit:function(t){t.button.textContent="Удаление...",K.delCard(t.data.id).then((function(){t.data.removeItem(),it.close()})).finally((function(){return t.button.textContent="Да"})).catch((function(t){return console.log(t)}))}}),at=new w(".popup_button_add-item",{callbackSubmit:function(t){var e=t.data,n=t.button;n.textContent="Сохранение...",K.addCard({name:e.title,link:e.link}).then((function(t){rt.addItem(nt(t)),at.close()})).finally((function(){return n.textContent="Создать"})).catch((function(t){return console.log(t)}))}});N.addEventListener("click",(function(){W.validBeforeOpenForm(),at.open()})),Q.enableValidation(),W.enableValidation(),X.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,